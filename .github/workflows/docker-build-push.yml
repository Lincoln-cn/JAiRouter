# Docker Build and Push Workflow
# Automatically builds and pushes Docker images to Docker Hub on release creation

name: Docker Build and Push

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name for the Docker image'
        required: true
        default: 'latest'

env:
  # Docker image name - using your specified repository
  DOCKER_IMAGE_NAME: sodlinken/jairouter
  # Project name
  PROJECT_NAME: model-router

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # Extract version from pom.xml
      - name: Extract version from pom.xml
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build JAR file using the provided script
      - name: Build JAR And Docker Image file
        run: |
          chmod +x ./scripts/docker-build.sh
          ./scripts/docker-build.sh

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag
            type=sha,prefix=,format=short

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Print the pushed image information
      - name: Print image information
        run: |
          echo "Docker image pushed successfully!"
          echo "Image: ${{ env.DOCKER_IMAGE_NAME }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"