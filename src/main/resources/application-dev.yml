# ========================================
# 开发环境配置
# ========================================
# 此文件仅包含开发环境特定的配置覆盖
# 基础配置通过模块化导入，详见 application.yml

# 服务器配置
server:
  port: 8080
  forward-headers-strategy: framework
  # 启用代理头支持，获取真实客户端IP
  use-forward-headers: true

# Swagger API 文档配置（仅开发环境）
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method
  api-docs:
    path: /v3/api-docs
  packages-to-scan: org.unreal.modelrouter.controller
  show-actuator: true
  cache:
    disabled: true

# 开发环境日志配置
logging:
  level:
    org.unreal.modelrouter: DEBUG
    org.springframework: INFO
    org.apache.http: INFO
    io.netty: INFO
    reactor.netty: INFO

# 开发环境调试配置
debug: false

# ========================================
# 开发环境管理端点配置
# ========================================
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,info,jwt-persistence-health,jwt-tokens,jwt-blacklist
  endpoint:
    # JWT令牌管理端点
    jwt-tokens:
      enabled: true  # 开发环境启用令牌管理端点
      sensitive: true
      
    # JWT黑名单管理端点
    jwt-blacklist:
      enabled: true  # 开发环境启用黑名单管理端点
      sensitive: true
      
    # JWT持久化健康检查端点
    jwt-persistence-health:
      enabled: true  # 开发环境启用持久化健康检查端点
      sensitive: false
      show-details: always
      
    # 健康检查端点
    health:
      show-details: always  # 开发环境显示详细健康信息
      show-components: always
      
    # 指标端点
    metrics:
      enabled: true
  
  # 健康检查配置
  health:
    redis:
      enabled: false  # 开发环境禁用Redis健康检查

# 开发环境存储配置覆盖
store:
  path: "config-dev/"

# 开发环境 WebClient 配置覆盖
webclient:
  connection-timeout: 5s
  read-timeout: 15s
  write-timeout: 15s
  max-in-memory-size: 5MB

# ========================================
# 开发环境安全配置覆盖
# ========================================
# 仅包含开发环境的安全配置差异
jairouter:
  security:
    # 开发环境安全配置覆盖
    enabled: true
    
    # 开发环境 API Key 特定配置
    api-key:
      enabled: true
      default-expiration-days: 30  # 开发环境使用较短的过期时间
      cache-expiration-seconds: 2424  # 30分钟缓存
      keys:
        # 开发环境测试用 API Key
        - keyId: "dev-admin-key"
          keyValue: "dev-admin-12345-abcde-67890-fghij"
          description: "开发环境管理员测试密钥"
          permissions: ["ADMIN", "READ", "WRITE", "DELETE"]
          expiresAt: "2025-12-31T23:59:59"
          enabled: true
          metadata:
            environment: "development"
            created-by: "developer"
        - keyId: "dev-user-key"
          keyValue: "dev-user-67890-klmno-12345-pqrst"
          description: "开发环境普通用户测试密钥"
          permissions: ["READ"]
          expiresAt: "2025-06-30T23:59:59"
          enabled: true
          metadata:
            environment: "development"
            created-by: "developer"

    # 开发环境 JWT 配置
    jwt:
      enabled: true
      jwt-header: "Jairouter_Token"
      secret: "your-secret-key-with-at-least-32-characters-for-development"
      algorithm: "HS256"
      expiration-minutes: 60
      refresh-expiration-days: 7
      issuer: "jairouter"
      
      # 开发环境JWT持久化配置
      persistence:
        enabled: true
        primary-storage: memory  # 开发环境使用内存存储
        fallback-storage: memory
        composite:
          enabled: false  # 开发环境关闭复合存储，使用简单内存存储
        sync:
          enabled: false  # 开发环境关闭数据同步
        startup-recovery:
          enabled: false  # 开发环境关闭启动恢复
        cleanup:
          schedule: "0 */5 * * * ?"  # 每5分钟清理一次
          retention-days: 1
        redis:
          enabled: false  # 开发环境默认不启用Redis
          host: "${REDIS_HOST:localhost}"
          port: "${REDIS_PORT:6379}"
          password: "${REDIS_PASSWORD:}"
          database: "${REDIS_DATABASE:1}"  # 使用数据库1避免冲突
      
      # 开发环境JWT黑名单配置
      blacklist:
        persistence:
          enabled: true
          primary-storage: memory
          max-memory-size: 1000
        composite:
          enabled: false  # 开发环境关闭复合存储
        redis:
          enabled: false  # 开发环境默认不启用Redis
          host: "${REDIS_HOST:localhost}"
          port: "${REDIS_PORT:6379}"
          password: "${REDIS_PASSWORD:}"
          database: "${REDIS_DATABASE:1}"
    
    # 开发环境数据脱敏配置（相对宽松）
    sanitization:
      response:
        enabled: false  # 临时禁用响应脱敏来调试问题
        log-sanitization: true
    # 开发环境审计配置
    audit:
      enabled: true
      log-level: "DEBUG"  # 开发环境使用详细日志
      include-request-body: true   # 开发环境可以包含请求体用于调试
      include-response-body: true  # 开发环境可以包含响应体用于调试
      retention-days: 7  # 开发环境较短的保留期
      alert-enabled: false  # 开发环境关闭告警
      

      
      storage:
        file-path: "logs/dev-security-audit.log"
        rotation:
          max-file-size: "10MB"  # 开发环境较小的文件大小
          max-files: 5
    
    # 开发环境监控配置
    monitoring:
      enabled: true
      alerts:
        enabled: false  # 开发环境关闭告警
      
      # JWT持久化监控配置
      jwt-persistence:
        enabled: true  # 开发环境启用JWT持久化监控
        
        # 指标收集配置
        metrics:
          token-operations:
            enabled: true
          blacklist-operations:
            enabled: true
          storage-health:
            enabled: true
            check-interval: 30  # 30秒检查间隔
          performance:
            enabled: true
          capacity:
            enabled: true
        
        # 健康检查配置
        health-checks:
          enabled: true
          check-interval: 30  # 30秒检查间隔
          timeout: 3000  # 3秒超时
          
          redis:
            enabled: true
            ping-check: true
            connection-pool-check: true
            memory-usage-check: true
            
          memory:
            enabled: true
            capacity-check: true
            gc-pressure-check: true
            
          composite:
            enabled: false  # 开发环境关闭复合存储检查
        
        # 监控数据导出配置
        export:
          prometheus:
            enabled: true
            metrics-prefix: "jairouter_jwt_persistence_dev"
            
        # 调试和诊断配置
        diagnostics:
          enabled: true  # 开发环境启用诊断
          detailed-logging:
            enabled: true
            log-level: "DEBUG"
          profiling:
            enabled: false  # 开发环境关闭性能分析

    
    # 开发环境性能配置
    performance:
      authentication:
        thread-pool-size: 5  # 开发环境较小的线程池
        timeout-ms: 10000    # 开发环境较长的超时时间便于调试
      
      sanitization:
        thread-pool-size: 3
        streaming-threshold: 524288  # 512KB
        regex-cache-size: 50
      
      cache:
        redis:
          enabled: false  # 开发环境默认不使用Redis
        local:
          enabled: true
          api-key:
            max-size: 100
            expire-after-write: 1800  # 30分钟
          jwt-blacklist:
            max-size: 1000
            expire-after-write: 3600  # 1小时
            
  # 开发环境错误追踪配置
  monitoring:
    error-tracking:
      enabled: true  # 开发环境启用错误追踪
      aggregation-window-minutes: 1  # 更短的聚合窗口
      max-aggregations: 100  # 更小的聚合数量
      
      sanitization:
        max-stack-depth: 50  # 开发环境可以显示更多堆栈信息
      
      logging:
        level: "DEBUG"  # 开发环境详细日志
        include-stack-trace: true
        include-context: true
  
  # 开发环境追踪配置
  tracing:
    logging:
      include-stack-trace: false  # 开发环境不记录堆栈跟踪到结构化日志