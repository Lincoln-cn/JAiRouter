# 生产环境配置
spring:
  profiles:
    active: prod

# 日志配置 - 生产环境最小化日志输出
logging:
  level:
    root: WARN
    org.unreal.modelrouter.controller: INFO
    org.unreal.modelrouter.config.ConfigurationService: INFO
    org.unreal.modelrouter.store.AutoMergeService: INFO
    org.unreal.modelrouter.checker.ServerChecker: WARN
    org.unreal.modelrouter.checker.RateLimiterCleanupChecker: WARN
    org.unreal.modelrouter.ratelimit: ERROR
    org.unreal.modelrouter.loadbalancer: ERROR
    org.unreal.modelrouter.circuitbreaker: WARN
    org.unreal.modelrouter: WARN
    org.springframework: ERROR
    org.apache.http: ERROR
    io.netty: ERROR
    reactor.netty: ERROR
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-}] %logger{50} - %msg%n"
  file:
    name: logs/jairouter-prod.log

# 生产环境特定配置
server:
  port: 8080
  # 生产环境性能优化
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20000
    max-connections: 8192

# 生产环境存储配置
store:
  type: file
  path: "config/"

# WebClient 生产环境配置
webclient:
  connection-timeout: 10s
  read-timeout: 30s
  write-timeout: 30s
  max-in-memory-size: 10MB

# ========================================
# 生产环境安全配置
# ========================================
jairouter:
  security:
    # 生产环境安全功能（默认关闭，需要显式启用）
    enabled: false
    
    # 生产环境API Key配置
    api-key:
      enabled: true
      header-name: "X-API-Key"
      default-expiration-days: 365
      cache-enabled: true
      cache-expiration-seconds: 3600  # 1小时缓存
      keys:
        # 生产环境API Key通过环境变量配置
        - key-id: "prod-admin-key"
          key-value: "${PROD_ADMIN_API_KEY:}"
          description: "生产环境管理员API密钥"
          permissions: ["admin", "read", "write", "delete"]
          expires-at: "${PROD_ADMIN_KEY_EXPIRES:2025-12-31T23:59:59}"
          enabled: true
          metadata:
            environment: "production"
            created-by: "system"
            security-level: "high"
        
        - key-id: "prod-service-key"
          key-value: "${PROD_SERVICE_API_KEY:}"
          description: "生产环境服务API密钥"
          permissions: ["read", "write"]
          expires-at: "${PROD_SERVICE_KEY_EXPIRES:2025-12-31T23:59:59}"
          enabled: true
          metadata:
            environment: "production"
            created-by: "system"
            security-level: "medium"
        
        - key-id: "prod-readonly-key"
          key-value: "${PROD_READONLY_API_KEY:}"
          description: "生产环境只读API密钥"
          permissions: ["read"]
          expires-at: "${PROD_READONLY_KEY_EXPIRES:2025-12-31T23:59:59}"
          enabled: true
          metadata:
            environment: "production"
            created-by: "system"
            security-level: "low"
    
    # 生产环境JWT配置
    jwt:
      enabled: false  # 生产环境默认关闭JWT，根据需要启用
      secret: "${PROD_JWT_SECRET:}"
      algorithm: "HS256"
      expiration-minutes: 60
      refresh-expiration-days: 7
      issuer: "jairouter-prod"
      blacklist-enabled: true
      blacklist-cache:
        expiration-seconds: 86400
        max-size: 50000  # 生产环境更大的黑名单缓存
    
    # 生产环境数据脱敏配置（严格模式）
    sanitization:
      request:
        enabled: true
        sensitive-words:
          - "password"
          - "secret"
          - "token"
          - "key"
          - "credential"
          - "auth"
          - "session"
          - "private"
          - "confidential"
        pii-patterns:
          - "\\d{11}"                                                    # 手机号码
          - "\\d{18}"                                                    # 身份证号码
          - "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}"          # 邮箱地址
          - "\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b"      # 银行卡号
          - "\\b(?:13[0-9]|14[5-9]|15[0-3,5-9]|16[2,5,6,7]|17[0-8]|18[0-9]|19[1,3,5,8,9])\\d{8}\\b"  # 中国手机号
          - "\\b[1-9]\\d{5}(18|19|20)\\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])\\d{3}[0-9Xx]\\b"  # 身份证号
        masking-char: "*"
        strategies:
          phone: "keep-prefix-suffix"
          email: "keep-domain"
          id-card: "keep-prefix-suffix"
          default: "full-mask"
        log-sanitization: false  # 生产环境不记录脱敏详情
        whitelist-users: []      # 生产环境不设置白名单用户
        whitelist-ips: []        # 生产环境不设置白名单IP
        rule-priorities:
          phone: 1
          email: 2
          id-card: 3
          bank-card: 4
          sensitive-word: 5
      
      response:
        enabled: true
        sensitive-words:
          - "internal"
          - "debug"
          - "error"
          - "exception"
          - "stack"
          - "trace"
          - "system"
          - "server"
        pii-patterns:
          - "\\d{11}"
          - "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}"
          - "\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b"
        masking-char: "*"
        log-sanitization: false
        preserve-json-structure: true
        service-specific-rules:
          chat:
            additional-patterns:
              - "\\b(?:QQ|微信|WeChat)[:：]?\\s*\\d+\\b"
          embedding:
            enabled: false
          rerank:
            preserve-ranking-scores: true
    
    # 生产环境审计配置
    audit:
      enabled: true
      log-level: "INFO"
      include-request-body: false   # 生产环境不包含请求体
      include-response-body: false  # 生产环境不包含响应体
      retention-days: 365  # 生产环境长期保留
      alert-enabled: true
      
      alert-thresholds:
        auth-failures-per-minute: 5      # 生产环境更严格的阈值
        sanitization-operations-per-minute: 200
        suspicious-requests-per-minute: 10
      
      event-types:
        authentication-success: false    # 生产环境不记录成功认证（减少日志量）
        authentication-failure: true
        authorization-failure: true
        sanitization-applied: false      # 生产环境不记录脱敏操作（减少日志量）
        configuration-changed: true
        security-alert: true
        suspicious-activity: true
      
      storage:
        type: "file"
        file-path: "logs/prod-security-audit.log"
        rotation:
          max-file-size: "500MB"  # 生产环境更大的文件大小
          max-files: 100
    
    # 生产环境监控配置
    monitoring:
      enabled: true
      metrics:
        authentication:
          enabled: true
          histogram-buckets: [0.1, 0.5, 1.0, 2.0, 5.0, 10.0, 30.0]
        sanitization:
          enabled: true
          histogram-buckets: [0.01, 0.05, 0.1, 0.5, 1.0, 2.0, 5.0]
        security-events:
          enabled: true
          by-event-type: true
          by-user: false  # 生产环境不按用户统计（隐私考虑）
          by-ip: true
      
      alerts:
        enabled: true
        thresholds:
          authentication-failure-rate: 0.05  # 生产环境更严格的失败率阈值（5%）
          sanitization-error-rate: 0.01      # 生产环境更严格的错误率阈值（1%）
          response-time-p99: 500              # 生产环境更严格的响应时间要求
          max-requests-per-minute: 5000       # 生产环境更高的请求量阈值
        
        notifications:
          email:
            enabled: true
            recipients: 
              - "${SECURITY_ALERT_EMAIL:}"
          webhook:
            enabled: true
            url: "${SECURITY_ALERT_WEBHOOK:}"
          log:
            enabled: true
    
    # 生产环境性能配置
    performance:
      authentication:
        async-enabled: true
        thread-pool-size: 20  # 生产环境更大的线程池
        timeout-ms: 3000      # 生产环境更短的超时时间
      
      sanitization:
        parallel-enabled: true
        thread-pool-size: 10
        streaming-threshold: 2097152  # 2MB
        regex-cache-size: 500         # 生产环境更大的缓存
      
      cache:
        redis:
          enabled: true  # 生产环境启用Redis缓存
          host: "${REDIS_HOST:localhost}"
          port: "${REDIS_PORT:6379}"
          password: "${REDIS_PASSWORD:}"
          database: 0
          timeout: 2000
          pool:
            max-active: 20  # 生产环境更大的连接池
            max-idle: 10
            min-idle: 5
        local:
          enabled: true
          api-key:
            max-size: 10000  # 生产环境更大的本地缓存
            expire-after-write: 3600
          jwt-blacklist:
            max-size: 100000
            expire-after-write: 86400

# 生产环境监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true