# ========================================
# 预发布环境配置
# ========================================
# 此文件仅包含预发布环境特定的配置覆盖
# 基础配置通过模块化导入，详见 application.yml

# 预发布环境日志配置（详细日志）
logging:
  level:
    root: INFO
    org.unreal.modelrouter.controller: INFO
    org.unreal.modelrouter.security: DEBUG  # 安全相关保持详细日志
    org.unreal.modelrouter.config.ConfigurationService: INFO
    org.unreal.modelrouter.store.AutoMergeService: INFO
    org.unreal.modelrouter.checker.ServerChecker: WARN
    org.unreal.modelrouter.checker.RateLimiterCleanupChecker: WARN
    org.unreal.modelrouter.ratelimit: WARN
    org.unreal.modelrouter.loadbalancer: WARN
    org.unreal.modelrouter.circuitbreaker: WARN
    org.unreal.modelrouter: INFO
    org.springframework: WARN
    org.apache.http: WARN
    io.netty: WARN
    reactor.netty: WARN
  file:
    name: logs/jairouter-staging.log

# 预发布环境存储配置覆盖
store:
  path: "config-staging/"

# 预发布环境 WebClient 配置覆盖
webclient:
  connection-timeout: 8s
  read-timeout: 25s
  write-timeout: 25s
  max-in-memory-size: 8MB

# ========================================
# 预发布环境安全配置覆盖
# ========================================
# 仅包含预发布环境的安全配置差异
jairouter:
  security:
    # 预发布环境启用安全功能进行测试
    enabled: true
    
    # 预发布环境 API Key 特定配置
    api-key:
      enabled: true
      default-expiration-days: 180  # 预发布环境中等过期时间
      cache-expiration-seconds: 3600
      keys:
        # 预发布环境API Key通过环境变量配置
        - key-id: "staging-admin-key"
          key-value: "${STAGING_ADMIN_API_KEY:}"
          description: "预发布环境管理员API密钥"
          permissions: ["admin", "read", "write", "delete"]
          expires-at: "${STAGING_ADMIN_KEY_EXPIRES:2025-12-31T23:59:59}"
          enabled: true
          metadata:
            environment: "staging"
            created-by: "system"
            security-level: "high"
        
        - key-id: "staging-test-key"
          key-value: "${STAGING_TEST_API_KEY:}"
          description: "预发布环境测试API密钥"
          permissions: ["read", "write"]
          expires-at: "${STAGING_TEST_KEY_EXPIRES:2025-12-31T23:59:59}"
          enabled: true
          metadata:
            environment: "staging"
            created-by: "tester"
            security-level: "medium"
    
    # 预发布环境 JWT 配置
    jwt:
      enabled: true
      secret: "${STAGING_JWT_SECRET:}"
      issuer: "jairouter-staging"
      blacklist-cache:
        max-size: 20000
    
    # 预发布环境数据脱敏配置
    sanitization:
      request:
        enabled: true
        log-sanitization: true  # 预发布环境记录脱敏日志用于测试
        whitelist-users:
          - "staging-admin-key"
        whitelist-ips:
          - "127.0.0.1"
          - "::1"
      
      response:
        enabled: true
        log-sanitization: true
    
    # 预发布环境审计配置
    audit:
      enabled: true
      include-request-body: true   # 预发布环境可以包含请求体用于测试
      include-response-body: false # 预发布环境不包含响应体
      retention-days: 60  # 预发布环境中等保留期
      alert-enabled: true
      
      alert-thresholds:
        auth-failures-per-minute: 8
        sanitization-operations-per-minute: 150
        suspicious-requests-per-minute: 15
      
      storage:
        file-path: "logs/staging-security-audit.log"
        rotation:
          max-file-size: "200MB"
          max-files: 50
    
    # 预发布环境监控配置
    monitoring:
      enabled: true
      alerts:
        enabled: true
        thresholds:
          authentication-failure-rate: 0.08  # 预发布环境适中的阈值
          sanitization-error-rate: 0.03
          response-time-p99: 800
          max-requests-per-minute: 2000
        
        notifications:
          email:
            enabled: true
            recipients: 
              - "${STAGING_ALERT_EMAIL:}"
          webhook:
            enabled: false
          log:
            enabled: true
    
    # 预发布环境性能配置
    performance:
      authentication:
        thread-pool-size: 15
        timeout-ms: 4000
      
      sanitization:
        thread-pool-size: 8
        streaming-threshold: 1572864  # 1.5MB
        regex-cache-size: 300
      
      cache:
        redis:
          enabled: true  # 预发布环境启用Redis测试
          host: "${STAGING_REDIS_HOST:localhost}"
          port: "${STAGING_REDIS_PORT:6379}"
          password: "${STAGING_REDIS_PASSWORD:}"
          database: 1  # 使用不同的数据库
          timeout: 2000
          pool:
            max-active: 15
            max-idle: 8
            min-idle: 3
        local:
          enabled: true
          api-key:
            max-size: 5000
            expire-after-write: 3600
          jwt-blacklist:
            max-size: 50000
            expire-after-write: 86400