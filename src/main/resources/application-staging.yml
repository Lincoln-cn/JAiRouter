# ========================================
# 预发布环境配置
# ========================================
# 此文件仅包含预发布环境特定的配置覆盖
# 基础配置通过模块化导入，详见 application.yml

# 预发布环境日志配置
logging:
  level:
    root: INFO
    org.unreal.modelrouter: INFO
    org.springframework: WARN
    org.apache.http: WARN
    io.netty: WARN
    reactor.netty: WARN
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-}] %logger{50} - %msg%n"
  file:
    name: logs/jairouter-staging.log

# 预发布环境存储配置覆盖
store:
  path: "config-staging/"

# ========================================
# 预发布环境安全配置覆盖
# ========================================
jairouter:
  security:
    # 预发布环境安全功能
    enabled: true
    
    # 预发布环境 API Key 配置
    api-key:
      enabled: true
      default-expiration-days: 90
      cache-expiration-seconds: 3600
      keys:
        # 预发布环境测试用 API Key
        - keyId: "staging-admin-key"
          keyValue: "${STAGING_ADMIN_API_KEY:staging-admin-test-key-12345}"
          description: "预发布环境管理员测试密钥"
          permissions: ["ADMIN", "READ", "WRITE", "DELETE"]
          expiresAt: "2025-12-31T23:59:59"
          enabled: true
          metadata:
            environment: "staging"
            created-by: "system"
        - keyId: "staging-user-key"
          keyValue: "${STAGING_USER_API_KEY:staging-user-test-key-67890}"
          description: "预发布环境用户测试密钥"
          permissions: ["READ", "WRITE"]
          expiresAt: "2025-06-30T23:59:59"
          enabled: true
          metadata:
            environment: "staging"
            created-by: "system"

    # 预发布环境 JWT 配置
    jwt:
      enabled: true
      jwt-header: "Jairouter_Token"
      secret: "${STAGING_JWT_SECRET:staging-jwt-secret-key-with-at-least-32-characters}"
      algorithm: "HS256"
      expiration-minutes: 60
      refresh-expiration-days: 7
      issuer: "jairouter-staging"
      
      # 预发布环境JWT持久化配置
      persistence:
        enabled: true
        primary-storage: redis
        fallback-storage: memory
        composite:
          enabled: true  # 预发布环境启用复合存储策略
        sync:
          enabled: true  # 预发布环境启用数据同步
        startup-recovery:
          enabled: true  # 预发布环境启用启动恢复
        cleanup:
          retention-days: 7
        redis:
          enabled: true
          host: "${REDIS_HOST:localhost}"
          port: "${REDIS_PORT:6379}"
          password: "${REDIS_PASSWORD:}"
          database: "${REDIS_DATABASE:2}"  # 使用数据库2
          connection-timeout: 5000
          retry-attempts: 3
          pool:
            max-active: 10
            max-idle: 8
            min-idle: 2
      
      # 预发布环境JWT黑名单配置
      blacklist:
        persistence:
          enabled: true
          primary-storage: redis
          max-memory-size: 10000
        composite:
          enabled: true  # 预发布环境启用复合存储策略
        redis:
          enabled: true
          host: "${REDIS_HOST:localhost}"
          port: "${REDIS_PORT:6379}"
          password: "${REDIS_PASSWORD:}"
          database: "${REDIS_DATABASE:2}"
          connection-timeout: 5000
          retry-attempts: 3
          pool:
            max-active: 10
            max-idle: 8
            min-idle: 2
    
    # 预发布环境数据脱敏配置
    sanitization:
    
    # 预发布环境审计配置
    audit:
      enabled: true
      log-level: "INFO"
      include-request-body: false
      include-response-body: false
      retention-days: 30
      alert-enabled: true
      

      
      storage:
        file-path: "logs/staging-security-audit.log"
        rotation:
          max-file-size: "100MB"
          max-files: 30
    
    # 预发布环境监控配置
    monitoring:
      enabled: true
      alerts:
        enabled: true
        thresholds:
          authentication-failure-rate: 0.1
          sanitization-error-rate: 0.05
          response-time-p99: 1000
          max-requests-per-minute: 2000

    
    # 预发布环境性能配置
    performance:
      authentication:
        thread-pool-size: 10
        timeout-ms: 5000
      
      sanitization:
        thread-pool-size: 5
        streaming-threshold: 1048576  # 1MB
        regex-cache-size: 100
      
      cache:
        redis:
          enabled: true
          host: "${REDIS_HOST:localhost}"
          port: "${REDIS_PORT:6379}"
          password: "${REDIS_PASSWORD:}"
          database: 2
          timeout: 3000
          pool:
            max-active: 10
            max-idle: 8
            min-idle: 2
        local:
          enabled: true
          api-key:
            max-size: 1000
            expire-after-write: 3600
          jwt-blacklist:
            max-size: 10000
            expire-after-write: 86400

# 预发布环境监控配置覆盖
management:
  endpoint:
    health:
      show-details: when-authorized
    jwt-tokens:
      enabled: true  # 预发布环境启用调试端点
    jwt-blacklist:
      enabled: true

# 预发布环境追踪配置
jairouter:
  tracing:
    logging:
      include-stack-trace: false
  
