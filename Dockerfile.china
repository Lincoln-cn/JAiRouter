# 多阶段构建 Dockerfile for JAiRouter (China Optimized)
# 使用阿里云Maven镜像加速构建
FROM maven:3.9.6-eclipse-temurin-17 AS builder

WORKDIR /app

# 复制阿里云Maven配置
COPY settings-china.xml /root/.m2/settings.xml

# 复制构建文件
COPY pom.xml .
COPY src ./src
COPY checkstyle.xml .
COPY spotbugs-security-include.xml .
COPY spotbugs-security-exclude.xml .

# 构建应用程序（使用china profile）
RUN mvn clean package -Pchina

# 运行阶段
FROM eclipse-temurin:17-jre

LABEL maintainer="JAiRouter Team"
LABEL description="JAiRouter - AI Model Service Routing and Load Balancing Gateway"
LABEL version="1.0-SNAPSHOT"

# 创建应用用户
RUN addgroup -g 1001 jairouter && \
    adduser -D -s /bin/sh -u 1001 -G jairouter jairouter

WORKDIR /app

# 创建必要的目录
RUN mkdir -p /app/logs /app/config /app/config-store && \
    chown -R jairouter:jairouter /app

# 复制JAR文件
COPY --from=builder /app/target/model-router-*.jar app.jar

# 配置文件通过卷挂载提供，无需复制到镜像中

# 设置环境变量
ENV JAVA_OPTS="-Xms512m -Xmx1024m -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
ENV SPRING_PROFILES_ACTIVE=prod
ENV SERVER_PORT=8080

EXPOSE 8080

USER jairouter

HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1

ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]